// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "server";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

enum Role {
    GUESSER = 0;
    VERIFIER = 1;
    DEFAULT = 2;
}

enum Color{
    RED = 0;
    BLUE = 1;
    GREEN = 2;
    YELLOW = 3;
    PURPLE = 4;
    ORANGE = 5;
}

enum VerificationMarker{
    GOOD_PLACE_AND_COLOR = 0;
    GOOD_COLOR = 1;
    NONE = 2;
}

// The request message containing the user's name.
message HelloRequest {
    string name = 1;
}

// The response message containing the greetings
message HelloReply {
    string message = 1;
}

// The greeting service definition.
service Greeter {
    // Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {}
    rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}

    rpc CreateGame(GameDescription) returns (GameDescription) {}
    rpc GetGamesByName(GameDescription) returns (GamesByName) {}
    rpc JoinGame (Player) returns (Player) {}
    rpc WaitForGuesser(Combination) returns (Player) {}
    rpc WaitForVerifier(Player) returns (Player) {}
    rpc KeepAlive(stream Player) returns(Player) {}
    rpc Guess (Combination) returns (Verification) {}
    rpc GetGuesses (Player) returns (stream Combination) {}
    rpc Verify (Verification) returns (VerifyAck) {}
}

message GamesByName{
    string name = 1;
    repeated GameDescription games = 2;
}

message GameDescription{
    string gameName = 1;
    string creationDate = 3;
    string gameId = 2;
    Player guesser = 4;
    Player verifier = 5;
}

message Player {
    string playerId = 4;
    string playerName = 1;
    string gameId = 2;
    Role role = 3;
}

message Combination {
    Player player = 1;
    Color first = 2;
    Color second = 3;
    Color third = 4;
    Color fourth = 5;
}

message Verification {
    bool endGame = 6;
    Player player = 1;
    VerificationMarker first = 2;
    VerificationMarker second = 3;
    VerificationMarker third = 4;
    VerificationMarker fourth = 5;
}

message VerifyAck {
    string message = 1;
}