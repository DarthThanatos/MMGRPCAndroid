// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Hello.proto

package server;

/**
 * Protobuf type {@code helloworld.Verification}
 */
public  final class Verification extends
    com.google.protobuf.GeneratedMessageLite<
        Verification, Verification.Builder> implements
    // @@protoc_insertion_point(message_implements:helloworld.Verification)
    VerificationOrBuilder {
  private Verification() {
  }
  public static final int ENDGAME_FIELD_NUMBER = 6;
  private boolean endGame_;
  /**
   * <code>optional bool endGame = 6;</code>
   */
  public boolean getEndGame() {
    return endGame_;
  }
  /**
   * <code>optional bool endGame = 6;</code>
   */
  private void setEndGame(boolean value) {
    
    endGame_ = value;
  }
  /**
   * <code>optional bool endGame = 6;</code>
   */
  private void clearEndGame() {
    
    endGame_ = false;
  }

  public static final int PLAYER_FIELD_NUMBER = 1;
  private server.Player player_;
  /**
   * <code>optional .helloworld.Player player = 1;</code>
   */
  public boolean hasPlayer() {
    return player_ != null;
  }
  /**
   * <code>optional .helloworld.Player player = 1;</code>
   */
  public server.Player getPlayer() {
    return player_ == null ? server.Player.getDefaultInstance() : player_;
  }
  /**
   * <code>optional .helloworld.Player player = 1;</code>
   */
  private void setPlayer(server.Player value) {
    if (value == null) {
      throw new NullPointerException();
    }
    player_ = value;
    
    }
  /**
   * <code>optional .helloworld.Player player = 1;</code>
   */
  private void setPlayer(
      server.Player.Builder builderForValue) {
    player_ = builderForValue.build();
    
  }
  /**
   * <code>optional .helloworld.Player player = 1;</code>
   */
  private void mergePlayer(server.Player value) {
    if (player_ != null &&
        player_ != server.Player.getDefaultInstance()) {
      player_ =
        server.Player.newBuilder(player_).mergeFrom(value).buildPartial();
    } else {
      player_ = value;
    }
    
  }
  /**
   * <code>optional .helloworld.Player player = 1;</code>
   */
  private void clearPlayer() {  player_ = null;
    
  }

  public static final int FIRST_FIELD_NUMBER = 2;
  private int first_;
  /**
   * <code>optional .helloworld.VerificationMarker first = 2;</code>
   */
  public int getFirstValue() {
    return first_;
  }
  /**
   * <code>optional .helloworld.VerificationMarker first = 2;</code>
   */
  public server.VerificationMarker getFirst() {
    server.VerificationMarker result = server.VerificationMarker.forNumber(first_);
    return result == null ? server.VerificationMarker.UNRECOGNIZED : result;
  }
  /**
   * <code>optional .helloworld.VerificationMarker first = 2;</code>
   */
  private void setFirstValue(int value) {
      first_ = value;
  }
  /**
   * <code>optional .helloworld.VerificationMarker first = 2;</code>
   */
  private void setFirst(server.VerificationMarker value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    first_ = value.getNumber();
  }
  /**
   * <code>optional .helloworld.VerificationMarker first = 2;</code>
   */
  private void clearFirst() {
    
    first_ = 0;
  }

  public static final int SECOND_FIELD_NUMBER = 3;
  private int second_;
  /**
   * <code>optional .helloworld.VerificationMarker second = 3;</code>
   */
  public int getSecondValue() {
    return second_;
  }
  /**
   * <code>optional .helloworld.VerificationMarker second = 3;</code>
   */
  public server.VerificationMarker getSecond() {
    server.VerificationMarker result = server.VerificationMarker.forNumber(second_);
    return result == null ? server.VerificationMarker.UNRECOGNIZED : result;
  }
  /**
   * <code>optional .helloworld.VerificationMarker second = 3;</code>
   */
  private void setSecondValue(int value) {
      second_ = value;
  }
  /**
   * <code>optional .helloworld.VerificationMarker second = 3;</code>
   */
  private void setSecond(server.VerificationMarker value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    second_ = value.getNumber();
  }
  /**
   * <code>optional .helloworld.VerificationMarker second = 3;</code>
   */
  private void clearSecond() {
    
    second_ = 0;
  }

  public static final int THIRD_FIELD_NUMBER = 4;
  private int third_;
  /**
   * <code>optional .helloworld.VerificationMarker third = 4;</code>
   */
  public int getThirdValue() {
    return third_;
  }
  /**
   * <code>optional .helloworld.VerificationMarker third = 4;</code>
   */
  public server.VerificationMarker getThird() {
    server.VerificationMarker result = server.VerificationMarker.forNumber(third_);
    return result == null ? server.VerificationMarker.UNRECOGNIZED : result;
  }
  /**
   * <code>optional .helloworld.VerificationMarker third = 4;</code>
   */
  private void setThirdValue(int value) {
      third_ = value;
  }
  /**
   * <code>optional .helloworld.VerificationMarker third = 4;</code>
   */
  private void setThird(server.VerificationMarker value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    third_ = value.getNumber();
  }
  /**
   * <code>optional .helloworld.VerificationMarker third = 4;</code>
   */
  private void clearThird() {
    
    third_ = 0;
  }

  public static final int FOURTH_FIELD_NUMBER = 5;
  private int fourth_;
  /**
   * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
   */
  public int getFourthValue() {
    return fourth_;
  }
  /**
   * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
   */
  public server.VerificationMarker getFourth() {
    server.VerificationMarker result = server.VerificationMarker.forNumber(fourth_);
    return result == null ? server.VerificationMarker.UNRECOGNIZED : result;
  }
  /**
   * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
   */
  private void setFourthValue(int value) {
      fourth_ = value;
  }
  /**
   * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
   */
  private void setFourth(server.VerificationMarker value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    fourth_ = value.getNumber();
  }
  /**
   * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
   */
  private void clearFourth() {
    
    fourth_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (player_ != null) {
      output.writeMessage(1, getPlayer());
    }
    if (first_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      output.writeEnum(2, first_);
    }
    if (second_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      output.writeEnum(3, second_);
    }
    if (third_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      output.writeEnum(4, third_);
    }
    if (fourth_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      output.writeEnum(5, fourth_);
    }
    if (endGame_ != false) {
      output.writeBool(6, endGame_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (player_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPlayer());
    }
    if (first_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, first_);
    }
    if (second_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, second_);
    }
    if (third_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, third_);
    }
    if (fourth_ != server.VerificationMarker.GOOD_PLACE_AND_COLOR.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, fourth_);
    }
    if (endGame_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, endGame_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static server.Verification parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static server.Verification parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static server.Verification parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static server.Verification parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static server.Verification parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static server.Verification parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static server.Verification parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static server.Verification parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static server.Verification parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static server.Verification parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(server.Verification prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code helloworld.Verification}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        server.Verification, Builder> implements
      // @@protoc_insertion_point(builder_implements:helloworld.Verification)
      server.VerificationOrBuilder {
    // Construct using server.Verification.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional bool endGame = 6;</code>
     */
    public boolean getEndGame() {
      return instance.getEndGame();
    }
    /**
     * <code>optional bool endGame = 6;</code>
     */
    public Builder setEndGame(boolean value) {
      copyOnWrite();
      instance.setEndGame(value);
      return this;
    }
    /**
     * <code>optional bool endGame = 6;</code>
     */
    public Builder clearEndGame() {
      copyOnWrite();
      instance.clearEndGame();
      return this;
    }

    /**
     * <code>optional .helloworld.Player player = 1;</code>
     */
    public boolean hasPlayer() {
      return instance.hasPlayer();
    }
    /**
     * <code>optional .helloworld.Player player = 1;</code>
     */
    public server.Player getPlayer() {
      return instance.getPlayer();
    }
    /**
     * <code>optional .helloworld.Player player = 1;</code>
     */
    public Builder setPlayer(server.Player value) {
      copyOnWrite();
      instance.setPlayer(value);
      return this;
      }
    /**
     * <code>optional .helloworld.Player player = 1;</code>
     */
    public Builder setPlayer(
        server.Player.Builder builderForValue) {
      copyOnWrite();
      instance.setPlayer(builderForValue);
      return this;
    }
    /**
     * <code>optional .helloworld.Player player = 1;</code>
     */
    public Builder mergePlayer(server.Player value) {
      copyOnWrite();
      instance.mergePlayer(value);
      return this;
    }
    /**
     * <code>optional .helloworld.Player player = 1;</code>
     */
    public Builder clearPlayer() {  copyOnWrite();
      instance.clearPlayer();
      return this;
    }

    /**
     * <code>optional .helloworld.VerificationMarker first = 2;</code>
     */
    public int getFirstValue() {
      return instance.getFirstValue();
    }
    /**
     * <code>optional .helloworld.VerificationMarker first = 2;</code>
     */
    public Builder setFirstValue(int value) {
      copyOnWrite();
      instance.setFirstValue(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker first = 2;</code>
     */
    public server.VerificationMarker getFirst() {
      return instance.getFirst();
    }
    /**
     * <code>optional .helloworld.VerificationMarker first = 2;</code>
     */
    public Builder setFirst(server.VerificationMarker value) {
      copyOnWrite();
      instance.setFirst(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker first = 2;</code>
     */
    public Builder clearFirst() {
      copyOnWrite();
      instance.clearFirst();
      return this;
    }

    /**
     * <code>optional .helloworld.VerificationMarker second = 3;</code>
     */
    public int getSecondValue() {
      return instance.getSecondValue();
    }
    /**
     * <code>optional .helloworld.VerificationMarker second = 3;</code>
     */
    public Builder setSecondValue(int value) {
      copyOnWrite();
      instance.setSecondValue(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker second = 3;</code>
     */
    public server.VerificationMarker getSecond() {
      return instance.getSecond();
    }
    /**
     * <code>optional .helloworld.VerificationMarker second = 3;</code>
     */
    public Builder setSecond(server.VerificationMarker value) {
      copyOnWrite();
      instance.setSecond(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker second = 3;</code>
     */
    public Builder clearSecond() {
      copyOnWrite();
      instance.clearSecond();
      return this;
    }

    /**
     * <code>optional .helloworld.VerificationMarker third = 4;</code>
     */
    public int getThirdValue() {
      return instance.getThirdValue();
    }
    /**
     * <code>optional .helloworld.VerificationMarker third = 4;</code>
     */
    public Builder setThirdValue(int value) {
      copyOnWrite();
      instance.setThirdValue(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker third = 4;</code>
     */
    public server.VerificationMarker getThird() {
      return instance.getThird();
    }
    /**
     * <code>optional .helloworld.VerificationMarker third = 4;</code>
     */
    public Builder setThird(server.VerificationMarker value) {
      copyOnWrite();
      instance.setThird(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker third = 4;</code>
     */
    public Builder clearThird() {
      copyOnWrite();
      instance.clearThird();
      return this;
    }

    /**
     * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
     */
    public int getFourthValue() {
      return instance.getFourthValue();
    }
    /**
     * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
     */
    public Builder setFourthValue(int value) {
      copyOnWrite();
      instance.setFourthValue(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
     */
    public server.VerificationMarker getFourth() {
      return instance.getFourth();
    }
    /**
     * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
     */
    public Builder setFourth(server.VerificationMarker value) {
      copyOnWrite();
      instance.setFourth(value);
      return this;
    }
    /**
     * <code>optional .helloworld.VerificationMarker fourth = 5;</code>
     */
    public Builder clearFourth() {
      copyOnWrite();
      instance.clearFourth();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:helloworld.Verification)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new server.Verification();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        server.Verification other = (server.Verification) arg1;
        endGame_ = visitor.visitBoolean(endGame_ != false, endGame_,
            other.endGame_ != false, other.endGame_);
        player_ = visitor.visitMessage(player_, other.player_);
        first_ = visitor.visitInt(first_ != 0, first_,    other.first_ != 0, other.first_);
        second_ = visitor.visitInt(second_ != 0, second_,    other.second_ != 0, other.second_);
        third_ = visitor.visitInt(third_ != 0, third_,    other.third_ != 0, other.third_);
        fourth_ = visitor.visitInt(fourth_ != 0, fourth_,    other.fourth_ != 0, other.fourth_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                server.Player.Builder subBuilder = null;
                if (player_ != null) {
                  subBuilder = player_.toBuilder();
                }
                player_ = input.readMessage(server.Player.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(player_);
                  player_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                first_ = rawValue;
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                second_ = rawValue;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();

                third_ = rawValue;
                break;
              }
              case 40: {
                int rawValue = input.readEnum();

                fourth_ = rawValue;
                break;
              }
              case 48: {

                endGame_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (server.Verification.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:helloworld.Verification)
  private static final server.Verification DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Verification();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static server.Verification getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Verification> PARSER;

  public static com.google.protobuf.Parser<Verification> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

